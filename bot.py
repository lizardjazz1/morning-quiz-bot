# bot/bot.py
import logging
import asyncio
import signal # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

from telegram import Update, BotCommand
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackQueryHandler,
    ContextTypes,
    PicklePersistence, # –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ConversationHandler –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏
    PollAnswerHandler as PTBPollAnswerHandler, # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
)
from telegram.constants import ParseMode

from .app_config import AppConfig
from .state import BotState
from .data_manager import DataManager
# –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å CustomPollAnswerHandler, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç callback
from .poll_answer_handler import CustomPollAnswerHandler
from .utils import load_commands_from_config # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–∞ —É—Ç–∏–ª–∏—Ç–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞

# –ò–º–ø–æ—Ä—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –∏—Ö –∫–ª–∞—Å—Å–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from .modules.category_manager import CategoryManager
from .modules.score_manager import ScoreManager
from .handlers.quiz_manager import QuizManager
from .handlers.rating_handlers import RatingHandlers
from .handlers.config_handlers import ConfigHandlers
from .handlers.daily_quiz_scheduler import DailyQuizScheduler
from .handlers.common_handlers import CommonHandlers
# from .handlers.cleanup_handler import CleanupHandler # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[
        logging.FileHandler("bot.log", encoding='utf-8'), # –õ–æ–≥–∏ –≤ —Ñ–∞–π–ª
        logging.StreamHandler()                           # –õ–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram.vendor.ptb_urllib3.urllib3.connectionpool").setLevel(logging.INFO)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è graceful shutdown
stop_signals_received = asyncio.Event()

async def signal_handler(sig, frame):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {sig}, –Ω–∞—á–∏–Ω–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    stop_signals_received.set()

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ Updates."""
    logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update}:", exc_info=context.error)
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É
    # if isinstance(update, Update) and update.effective_chat:
    #     await context.bot.send_message(
    #         chat_id=update.effective_chat.id,
    #         text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º."
    #     )

async def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    app_config = AppConfig()
    logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")

    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
    bot_state = BotState()
    logger.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ.")

    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    # DataManager —Ç–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–µ—Ç app_config, –∞ –Ω–µ app_config.paths
    data_manager = DataManager(app_config=app_config, state=bot_state)
    await data_manager.load_all_data()
    logger.info("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö.")

    # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –º–æ–¥—É–ª–µ–π
    # CategoryManager –æ–∂–∏–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å questions_by_category –∏ app_config
    category_manager = CategoryManager(
        questions_by_category=bot_state.questions_by_category,
        app_config=app_config
    )
    logger.info("CategoryManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    score_manager = ScoreManager(
        app_config=app_config,
        state=bot_state,
        data_manager=data_manager
    )
    logger.info("ScoreManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ–ø—Ä–æ—Å—ã (Polls)
    # CustomPollAnswerHandler –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–ª–∞—Å—Å–æ–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–º get_handler()
    custom_poll_answer_handler = CustomPollAnswerHandler(
        state=bot_state,
        score_manager=score_manager,
        app_config=app_config
    )
    logger.info("CustomPollAnswerHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è PTB (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è ConversationHandler)
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    persistence = PicklePersistence(filepath=app_config.paths.ptb_persistence_file)
    logger.info(f"PTB persistence –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–π–ª: {app_config.paths.ptb_persistence_file}")

    # 7. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Application
    application = (
        Application.builder()
        .token(app_config.bot_token)
        .persistence(persistence)
        .parse_mode(ParseMode.HTML) # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        .build()
    )
    logger.info("–≠–∫–∑–µ–º–ø–ª—è—Ä Application —Å–æ–∑–¥–∞–Ω.")

    # 8. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    # –ü–µ—Ä–µ–¥–∞–µ–º application –≤ DailyQuizScheduler –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ job_queue
    # QuizManager —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ—Ç data_manager
    quiz_manager = QuizManager(
        app_config=app_config,
        state=bot_state,
        category_manager=category_manager,
        score_manager=score_manager,
        data_manager=data_manager,
        application=application # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ job_queue –≤ QuizManager, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    )
    logger.info("QuizManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    rating_handlers = RatingHandlers(
        score_manager=score_manager,
        app_config=app_config
    )
    logger.info("RatingHandlers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    config_handlers = ConfigHandlers(
        app_config=app_config,
        state=bot_state,
        data_manager=data_manager,
        category_manager=category_manager
    )
    logger.info("ConfigHandlers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    common_handlers = CommonHandlers(
        app_config=app_config,
        category_manager=category_manager,
        bot_state=bot_state # –î–æ–±–∞–≤–∏–ª bot_state, –µ—Å–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, /start –¥–æ–ª–∂–µ–Ω —á—Ç–æ-—Ç–æ –∏–∑ –Ω–µ–≥–æ —á–∏—Ç–∞—Ç—å
    )
    logger.info("CommonHandlers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # DailyQuizScheduler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ application, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å job_queue
    daily_quiz_scheduler = DailyQuizScheduler(
        app_config=app_config,
        state=bot_state,
        quiz_manager=quiz_manager, # –ü–µ—Ä–µ–¥–∞–µ–º QuizManager –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω
        data_manager=data_manager,
        application=application # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ job_queue
    )
    logger.info("DailyQuizScheduler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –∑–∞–ø—É—Å—Ç–∏—Ç –∑–∞–¥–∞—á–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.")
    await daily_quiz_scheduler.initialize_jobs() # –Ø–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á

    # cleanup_handler = CleanupHandler(app_config, bot_state, data_manager) # –ï—Å–ª–∏ –±—É–¥–µ—Ç

    # 9. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(custom_poll_answer_handler.get_handler()) # PTBPollAnswerHandler
    application.add_handlers(quiz_manager.get_handlers())
    application.add_handlers(rating_handlers.get_handlers())
    application.add_handlers(config_handlers.get_handlers())
    application.add_handlers(common_handlers.get_handlers())
    application.add_handlers(daily_quiz_scheduler.get_handlers()) # –ï—Å–ª–∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    # if cleanup_handler: application.add_handlers(cleanup_handler.get_handlers())

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    logger.info("–í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

    # 10. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
    # bot_commands = load_commands_from_config(app_config)
    # –í–º–µ—Å—Ç–æ load_commands_from_config –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –≤ AppConfig
    bot_commands = [
        BotCommand(app_config.commands.start, "üöÄ –ó–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand(app_config.commands.help, "‚ùì –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
        BotCommand(app_config.commands.quiz, "üéÆ –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É (–≥–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞)"),
        BotCommand(app_config.commands.categories, "üìö –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
        BotCommand(app_config.commands.top, "üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤"),
        BotCommand(app_config.commands.mystats, "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
        BotCommand(app_config.commands.set_quiz_type, "‚öôÔ∏è –¢–∏–ø –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –¥–ª—è —á–∞—Ç–∞ (single/session)"),
        BotCommand(app_config.commands.set_quiz_questions, "‚öôÔ∏è –ö–æ–ª-–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —á–∞—Ç–∞ (–¥–ª—è /quiz)"),
        BotCommand(app_config.commands.set_quiz_open_period, "‚öôÔ∏è –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤ —á–∞—Ç–µ (—Å–µ–∫)"),
        BotCommand(app_config.commands.enable_category, "‚ûï –í–∫–ª—é—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(app_config.commands.disable_category, "‚ûñ –í—ã–∫–ª—é—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(app_config.commands.reset_chat_config, "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞"),
        BotCommand(app_config.commands.view_chat_config, "üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞"),
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω–æ–π
        BotCommand(app_config.commands.subscribe_daily_quiz, "üìÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"),
        BotCommand(app_config.commands.unsubscribe_daily_quiz, "‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã"),
        BotCommand(app_config.commands.set_daily_quiz_time, "‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã"),
    ]
    if bot_commands:
        await application.bot.set_my_commands(bot_commands)
        logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

    # 11. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    await application.initialize() # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Application –ø–µ—Ä–µ–¥ run_polling/run_webhook
    await application.start()
    await application.updater.start_polling() # –ó–∞–ø—É—Å–∫–∞–µ–º polling

    # –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    await stop_signals_received.wait()

    # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    await application.updater.stop()
    await application.stop()
    await application.shutdown() # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
    for sig_name in ('SIGINT', 'SIGTERM'):
        if hasattr(signal, sig_name): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è Windows, –≥–¥–µ SIGTERM –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
            loop.add_signal_handler(getattr(signal, sig_name),
                                    lambda s=sig_name: asyncio.create_task(signal_handler(s, None)))
    try:
        loop.run_until_complete(main())
    except KeyboardInterrupt:
        logger.info("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ KeyboardInterrupt.")
    finally:
        logger.info("–¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π asyncio –∑–∞–≤–µ—Ä—à–µ–Ω.")

