#handlers/cleanup_handler.py
import logging
import os
from datetime import timedelta
from telegram.ext import ContextTypes, JobQueue
from telegram import Update
# from telegram.constants import ParseMode # ParseMode –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–∞–ø—Ä—è–º—É—é
# from telegram.error import TelegramError # TelegramError –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
# from html import escape # html.escape –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

# –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –¥–ª—è —è–≤–Ω–æ—Å—Ç–∏, BotState –ª—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ context.bot_data
# from state import BotState # –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–∞–π–ø-—Ö–∏–Ω—Ç–∏–Ω–≥–∞ –Ω–∞–ø—Ä—è–º—É—é

logger = logging.getLogger(__name__)

async def cleanup_old_messages_job(context: ContextTypes.DEFAULT_TYPE):
    logger.info("–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")

    # –ü–æ–ª—É—á–∞–µ–º BotState –∏–∑ data –∑–∞–¥–∞—á–∏ –∏–ª–∏ –∏–∑ context.bot_data
    bot_state = None
    if context.job and context.job.data and isinstance(context.job.data, dict):
        bot_state = context.job.data.get('bot_state')
    
    if not bot_state:
        # Fallback: –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ context.bot_data
        bot_state = context.bot_data.get('bot_state')
    
    if not bot_state:
        logger.error("BotState –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ context.job.data –∏–ª–∏ context.bot_data. –ó–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")
        return

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∞—Ç—Ä–∏–±—É—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º
    if not hasattr(bot_state, 'generic_messages_to_delete') or \
       not isinstance(bot_state.generic_messages_to_delete, dict):
        logger.warning("–ê—Ç—Ä–∏–±—É—Ç generic_messages_to_delete –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –≤ BotState. –ü—Ä–æ–ø—É—Å–∫ –∑–∞–¥–∞—á–∏.")
        return

    # bot_state.generic_messages_to_delete: Dict[int, Set[int]]
    # –≥–¥–µ int - chat_id, Set[int] - message_ids

    total_messages_to_process = sum(len(message_ids) for message_ids in bot_state.generic_messages_to_delete.values())
    logger.info(f"üìä –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {total_messages_to_process} –≤ {len(bot_state.generic_messages_to_delete)} —á–∞—Ç–∞—Ö")

    chats_to_remove_entry_for = [] # –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–ø–∏—Å—å –≤ —Å–ª–æ–≤–∞—Ä–µ —Å—Ç–∞–ª–∞ –ø—É—Å—Ç–æ–π

    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–æ–ø–∏–∏ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è, —á—Ç–æ–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –Ω–µ–≥–æ
    for chat_id, message_ids_set in list(bot_state.generic_messages_to_delete.items()):
        if not message_ids_set: # –ï—Å–ª–∏ –¥–ª—è —á–∞—Ç–∞ —É–∂–µ –ø—É—Å—Ç–æ–π —Å–µ—Ç, –ø–æ–º–µ—á–∞–µ–º –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
            chats_to_remove_entry_for.append(chat_id)
            continue

        processed_message_ids = set() # –°–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã (—É–¥–∞–ª–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–æ–ø–∏–∏ —Å–µ—Ç–∞, —á—Ç–æ–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ç–∞
        for msg_id in list(message_ids_set):
            try:
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ "–≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏" —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.
                # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Ö—Ä–∞–Ω—è—Ç—Å—è —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏ –∏ —É–¥–∞–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ N —á–∞—Å–æ–≤.
                await context.bot.delete_message(chat_id=chat_id, message_id=msg_id)
                logger.debug(f"–£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –∏–∑ —á–∞—Ç–∞ {chat_id}")
                processed_message_ids.add(msg_id)
            except Exception as e:
                error_str = str(e).lower()
                # –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ
                if "message to delete not found" in error_str or \
                   "message can't be deleted" in error_str or \
                   "message_id_invalid" in error_str or \
                   "message not found" in error_str or \
                   "chat not found" in error_str: # –ï—Å–ª–∏ —á–∞—Ç —É–¥–∞–ª–µ–Ω/–±–æ—Ç –∫–∏–∫–Ω—É—Ç
                    logger.warning(f"–°–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –≤ —á–∞—Ç–µ {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ/–Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ (–∏–ª–∏ —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω): {e}. –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.")
                    processed_message_ids.add(msg_id)
                else:
                    # –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é) - –æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–∏
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –∏–∑ —á–∞—Ç–∞ {chat_id}: {e}")

        # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ ID –∏–∑ —Å–µ—Ç–∞ –≤ BotState
        for m_id in processed_message_ids:
            message_ids_set.discard(m_id)

        # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —á–∞—Ç–∞ —Å—Ç–∞–ª –ø—É—Å—Ç—ã–º, –ø–æ–º–µ—á–∞–µ–º –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        if not message_ids_set:
             chats_to_remove_entry_for.append(chat_id)

    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è —á–∞—Ç–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    for chat_id_to_remove in chats_to_remove_entry_for:
        if chat_id_to_remove in bot_state.generic_messages_to_delete:
            del bot_state.generic_messages_to_delete[chat_id_to_remove]
            logger.debug(f"–£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è —á–∞—Ç–∞ {chat_id_to_remove} –∏–∑ generic_messages_to_delete (—Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—É—Å—Ç).")

    logger.info("–ó–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

def schedule_cleanup_job(job_queue: JobQueue, bot_state=None) -> None:
    """–ü–ª–∞–Ω–∏—Ä—É–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    mode = os.getenv("MODE", "production").lower()
    
    if mode == "testing":
        interval_hours = 1/60  # 1 –º–∏–Ω—É—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        logger.info("üîß –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: TESTING (–æ—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)")
    else:
        interval_hours = 6  # 6 —á–∞—Å–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        logger.info("üîß –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: PRODUCTION (–æ—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤)")
    
    first_run_delay_seconds = 60  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

    job_name = "periodic_message_cleanup" # –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –∑–∞–¥–∞—á–∏

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–¥–∞—á—É —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞)
    current_jobs = job_queue.get_jobs_by_name(job_name)
    if current_jobs:
        for job in current_jobs:
            job.schedule_removal()
        logger.info(f"–£–¥–∞–ª–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∑–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π '{job_name}'.")

    # –ü–µ—Ä–µ–¥–∞–µ–º bot_state –≤ data –∑–∞–¥–∞—á–∏
    job_data = {'bot_state': bot_state} if bot_state else {}

    job_queue.run_repeating(
        cleanup_old_messages_job,
        interval=timedelta(hours=interval_hours),
        first=timedelta(seconds=first_run_delay_seconds),
        name=job_name,
        data=job_data
    )
    logger.info(f"–ó–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π '{job_name}' –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {int(interval_hours * 60)} –º–∏–Ω—É—Ç (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ {first_run_delay_seconds} —Å–µ–∫).")

# –§—É–Ω–∫—Ü–∏—è cleanup_command –±—ã–ª–∞ –∑–¥–µ—Å—å, –Ω–æ –æ–Ω–∞ –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∫–ª–∞—Å—Å–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
# –∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ bot.py. –î–ª—è –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:
# 1. –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –µ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, CommonHandlers –∏–ª–∏ –Ω–æ–≤—ã–π AdminHandlers).
# 2. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É "cleanup" (–∏–ª–∏ –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è) –≤ AppConfig –∏ quiz_config.json.
# 3. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å CommandHandler –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ bot.py.
# 4. –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ set_my_commands –≤ bot.py.
# –ü–æ—Å–∫–æ–ª—å–∫—É —Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞ - –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã,
# —è –æ—Å—Ç–∞–≤–ª—è—é —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∑–¥–µ—Å—å —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º. –ï—Å–ª–∏ –æ–Ω–∞ –≤–∞–º –Ω—É–∂–Ω–∞, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –µ–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è.
# async def cleanup_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     if not update.effective_chat or not update.effective_user:
#         return
#
#     chat_id = update.effective_chat.id
#     user_id = update.effective_user.id
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
#     # –î–ª—è —ç—Ç–æ–≥–æ utils.is_user_admin_in_update(update, context) –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
#     # –∏–ª–∏ context.bot.get_chat_member(...) –∫–∞–∫ –∑–¥–µ—Å—å
#     chat_member = await context.bot.get_chat_member(chat_id, user_id)
#     if chat_member.status not in ['creator', 'administrator']:
#         await update.message.reply_text(
#             escape_markdown_v2("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."),
#             parse_mode=ParseMode.MARKDOWN_V2 # ParseMode –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
#         )
#         return
#
#     # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
#     args = context.args
#     if not args:
#         await update.message.reply_text(
#             escape_markdown_v2("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: `/cleanup 10`"),
#             parse_mode=ParseMode.MARKDOWN_V2 # ParseMode –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
#         )
#         return
#
#     try:
#         count = int(args[0])
#         if count <= 0 or count > 100: # –î–æ–±–∞–≤–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
#             raise ValueError("Count must be positive and not too large")
#     except ValueError:
#         await update.message.reply_text(
#             escape_markdown_v2("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π (1-100) –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."),
#             parse_mode=ParseMode.MARKDOWN_V2 # ParseMode –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
#         )
#         return
#
#     # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è (get_chat_history –±–æ–ª–µ–µ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è —ç—Ç–æ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ get_messages)
#     # –û–¥–Ω–∞–∫–æ, –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –æ—Å—Ç–∞–≤–∏–º get_chat_history, –Ω–æ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–º.
#     # Telegram Bot API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–æ–º,
#     # –∫—Ä–æ–º–µ –∫–∞–∫ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ –æ–¥–Ω–æ–º—É.
#     # –¢–∞–∫–∂–µ, –±–æ—Ç –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ (–µ—Å–ª–∏ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞).
#     # –ò —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å—Ç–∞—Ä—à–µ 48 —á–∞—Å–æ–≤ (–∫—Ä–æ–º–µ —Å–≤–æ–∏—Ö).
#
#     deleted_count = 0
#     # –í–ù–ò–ú–ê–ù–ò–ï: get_chat_history –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.
#     # –í–º–µ—Å—Ç–æ –Ω–µ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å context.bot.get_messages, –Ω–æ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞–Ω–∏—è message_ids.
#     # –õ–∏–±–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–æ–æ–±—â–µ–Ω–∏–π, get_chat_history - –æ–¥–∏–Ω –∏–∑ –ø—É—Ç–µ–π,
#     # –Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ API –ø–æ —É–¥–∞–ª–µ–Ω–∏—é.
#     message_ids_to_delete = []
#     async for message in context.bot.get_chat_history(chat_id, limit=count + 1): # +1 —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /cleanup
#         if message.message_id == update.message.message_id: # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
#             continue
#         message_ids_to_delete.append(message.message_id)
#         if len(message_ids_to_delete) >= count:
#             break
#
#     for msg_id_to_del in message_ids_to_delete:
#         try:
#             await context.bot.delete_message(chat_id, msg_id_to_del)
#             deleted_count += 1
#         except Exception as e:
#             logger.error(f"Error deleting message {msg_id_to_del}: {e}")
#
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
#     # utils.escape_markdown_v2 –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
#     from utils import escape_markdown_v2 # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏–ª–∏ utils –≤ sys.path
#     await update.message.reply_text(
#         f"–£–¥–∞–ª–µ–Ω–æ {escape_markdown_v2(str(deleted_count))} —Å–æ–æ–±—â–µ–Ω–∏–π.",
#         parse_mode=ParseMode.MARKDOWN_V2 # ParseMode –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
#     )
