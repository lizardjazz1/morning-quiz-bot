# bot/utils.py
import logging
from typing import List, Dict, Any, Optional, Callable, Coroutine
from datetime import datetime, timedelta, timezone

from telegram import BotCommand, Update
from telegram.ext import ContextTypes, JobQueue

from .app_config import CommandConfig # –î–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏

logger = logging.getLogger(__name__)

def load_commands_from_config(command_config: CommandConfig) -> List[BotCommand]:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥.
    """
    commands = [
        BotCommand(command_config.start, "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ / –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"),
        BotCommand(command_config.help, "‚ùì –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞"),
        BotCommand(command_config.quiz, "üéÆ –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É (—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏)"),
        BotCommand(command_config.categories, "üìö –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤–æ–ø—Ä–æ—Å–æ–≤"),
        BotCommand(command_config.top, "üèÜ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –≤ —ç—Ç–æ–º —á–∞—Ç–µ"),
        BotCommand(command_config.global_top, "üåç –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤"),
        BotCommand(command_config.mystats, "üìä –ü–æ–∫–∞–∑–∞—Ç—å –º–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"),
        BotCommand(command_config.stop_quiz, "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –≤ —á–∞—Ç–µ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤/–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞)"),
        BotCommand(command_config.cancel, "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ/–¥–∏–∞–ª–æ–≥"),
    ]

    admin_commands = [
        BotCommand(command_config.set_quiz_type, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏–ø –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.set_quiz_questions, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª-–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"),
        BotCommand(command_config.set_quiz_interval, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã"),
        BotCommand(command_config.set_quiz_open_period, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã"),
        BotCommand(command_config.add_chat_category, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.remove_chat_category, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.list_chat_categories, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.exclude_chat_category, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –ò—Å–∫–ª—é—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.unexclude_chat_category, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –í–µ—Ä–Ω—É—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.list_excluded_categories, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —á–∞—Ç–∞"),
        BotCommand(command_config.set_daily_quiz_time, "‚è∞ [–ê–¥–º–∏–Ω] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã"),
        BotCommand(command_config.enable_daily_quiz, "üóìÔ∏è [–ê–¥–º–∏–Ω] –í–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"),
        BotCommand(command_config.disable_daily_quiz, "üóìÔ∏è [–ê–¥–º–∏–Ω] –û—Ç–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"),
        BotCommand(command_config.get_chat_settings, "‚öôÔ∏è [–ê–¥–º–∏–Ω] –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞"),
        # BotCommand(command_config.cleanup_messages, "üßπ [–ê–¥–º–∏–Ω] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"), # –ï—Å–ª–∏ –±—É–¥–µ—Ç
    ]
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –æ–±—ä–µ–¥–∏–Ω–∏–º, –Ω–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª—è—Ç—å –¥–ª—è set_my_commands –ø–æ scope
    all_commands = commands + admin_commands
    logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(all_commands)} –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞.")
    return all_commands


def get_username_or_firstname(update: Update) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ first_name."""
    if update.effective_user:
        if update.effective_user.username:
            return f"@{update.effective_user.username}"
        return update.effective_user.first_name
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

def parse_quiz_command_args(args: List[str]) -> Dict[str, Any]:
    """
    –ü–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã /quiz.
    –ü—Ä–∏–º–µ—Ä: /quiz 10 –ù–∞—É–∫–∞ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ announce
    """
    parsed_args = {
        "num_questions": None,
        "categories": [],
        "announce": False,
        "mode": None # single, session (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∫–æ–º–∞–Ω–¥—ã)
    }
    
    remaining_args = []

    for arg in args:
        arg_lower = arg.lower()
        if arg_lower == "announce":
            parsed_args["announce"] = True
        elif arg_lower in ["single", "session", "–±—ã—Å—Ç—Ä—ã–π", "—Å–µ—Å—Å–∏—è"]: # –í–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ä–µ–∂–∏–º–∞
             if arg_lower in ["single", "–±—ã—Å—Ç—Ä—ã–π"]:
                 parsed_args["mode"] = "single"
             elif arg_lower in ["session", "—Å–µ—Å—Å–∏—è"]:
                 parsed_args["mode"] = "session"
        elif arg.isdigit():
            if parsed_args["num_questions"] is None: # –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
                parsed_args["num_questions"] = int(arg)
            else: # –ï—Å–ª–∏ —á–∏—Å–ª–æ —É–∂–µ –±—ã–ª–æ, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á–∞—Å—Ç—å—é –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                remaining_args.append(arg)
        else:
            remaining_args.append(arg)
    
    # –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å—á–∏—Ç–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏, –æ–±—ä–µ–¥–∏–Ω—è—è –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–µ
    current_category = ""
    for part in remaining_args:
        if current_category:
            current_category += " " + part
        else:
            current_category = part
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ current_category –ø–æ–ª–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π,
        # –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –∫–ª—é—á–∞–º–∏
        # –∏ –µ—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω—ã—Ö –∫–ª—é—á–µ–π, —Ç–æ –≤—Å–µ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è - —ç—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        # –î–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø—Ä–æ–±–µ–ª–∞–º–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
        # –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ –Ω–µ–º—É.
        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ, —á—Ç–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –∫–∞–∫ —á–∏—Å–ª–æ –∏–ª–∏ —Ñ–ª–∞–≥.
    if remaining_args:
         # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±: –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–Ω–µ —á–∏—Å–ª–∞ –∏ –Ω–µ "announce") - —ç—Ç–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
         # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—É–¥–µ—Ç –≤–≤–æ–¥–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞.
         # –î–ª—è —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä–æ–±–µ–ª—ã, –∏—Ö –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö
         # –∏–ª–∏ –º—ã –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ —Å—á–∏—Ç–∞—Ç—å –∫–∞–∂–¥—ã–π –æ—Å—Ç–∞–≤—à–∏–π—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π.
         # –ü–æ–∫–∞ —á—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
         # –ß—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–∞—Ä—Å–∏—Ç—å "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏", –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã –≤–≤–µ—Å—Ç–∏ `/quiz "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏"`
         # –∏–ª–∏ –º—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø—ã—Ç–∞—Ç—å—Å—è –Ω–∞–π—Ç–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è.
         # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, —Å–µ–π—á–∞—Å –∫–∞–∂–¥—ã–π remaining_arg –±—É–¥–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π.
        parsed_args["categories"] = [arg for arg in remaining_args if not arg.isdigit() and arg.lower() != "announce"]


    logger.debug(f"–ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã /quiz: {args}, —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω—ã –≤: {parsed_args}")
    return parsed_args


def get_mention_html(user_id: int, name: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML-—Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return f'<a href="tg://user?id={user_id}">{name}</a>'


async def S–°HEDULE_JOB_UNIQUIE(
    job_queue: JobQueue,
    job_name: str,
    callback: Callable[..., Coroutine[Any, Any, None]],
    interval: timedelta | float,
    first: Optional[timedelta | float | datetime] = None,
    last: Optional[timedelta | float | datetime] = None,
    data: Any = None,
    user_id: Optional[int] = None,
    chat_id: Optional[int] = None,
    enabled: Optional[bool] = True,
) -> None:
    """
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á—É, —É–¥–∞–ª—è—è –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
    """
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º
    # `get_jobs_by_name` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –Ω–µ–º—É.
    # –í python-telegram-bot v20+ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç tuple, –∞ –Ω–µ list
    current_jobs = job_queue.get_jobs_by_name(job_name)
    if current_jobs:
        logger.info(f"–ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ —Å –∏–º–µ–Ω–µ–º '{job_name}': {len(current_jobs)}. –£–¥–∞–ª—è–µ–º...")
        for job in current_jobs:
            job.schedule_removal()
            logger.info(f"–ó–∞–¥–∞—á–∞ '{job_name}' —É–¥–∞–ª–µ–Ω–∞.")
    else:
        logger.info(f"–ó–∞–¥–∞—á–∏ —Å –∏–º–µ–Ω–µ–º '{job_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é.")

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    job_queue.run_repeating(
        callback=callback,
        interval=interval,
        first=first,
        last=last,
        data=data,
        name=job_name,
        user_id=user_id,
        chat_id=chat_id,
        # enabled=enabled, # –ü–∞—Ä–∞–º–µ—Ç—Ä enabled —É–±—Ä–∞–ª–∏ –≤ v20, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ schedule_removal
    )
    logger.info(f"–ó–∞–¥–∞—á–∞ '{job_name}' –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {interval}.")

def get_current_utc_time() -> datetime:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC."""
    return datetime.now(timezone.utc)

def format_timedelta(td: timedelta) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç timedelta –≤ —Å—Ç—Ä–æ–∫—É —Ç–∏–ø–∞ "1–¥ 2—á 3–º 4—Å" """
    total_seconds = int(td.total_seconds())
    days = total_seconds // (24 * 3600)
    total_seconds %= (24 * 3600)
    hours = total_seconds // 3600
    total_seconds %= 3600
    minutes = total_seconds // 60
    seconds = total_seconds % 60

    parts = []
    if days > 0:
        parts.append(f"{days}–¥")
    if hours > 0:
        parts.append(f"{hours}—á")
    if minutes > 0:
        parts.append(f"{minutes}–º")
    if seconds > 0 or not parts: # –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–∫—É–Ω–¥—ã, –µ—Å–ª–∏ —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏
        parts.append(f"{seconds}—Å")
    
    return " ".join(parts) if parts else "0—Å"

def is_user_admin_in_update(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã–∑–≤–∞–≤—à–∏–π –∫–æ–º–∞–Ω–¥—É, –∞–¥–º–∏–Ω–æ–º —á–∞—Ç–∞.
    –†–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤. –í –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö –≤—Å–µ–≥–¥–∞ False (–∏–ª–∏ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å True).
    """
    if not update.effective_chat or not update.effective_user:
        return False
    if update.effective_chat.type == "private":
        return True # –í –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ "–∞–¥–º–∏–Ω" —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π

    try:
        chat_member = context.bot.get_chat_member(update.effective_chat.id, update.effective_user.id)
        return chat_member.status in ["administrator", "creator"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id} –≤ —á–∞—Ç–µ {update.effective_chat.id}: {e}")
        return False

