# poll_answer_handler.py
from telegram import Update, PollAnswer, User as TelegramUser
from telegram.ext import ContextTypes

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
from config import logger
import state # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ current_poll, user_scores, current_quiz_session
from data_manager import save_user_data # –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—á–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from quiz_logic import send_next_question_in_session, show_quiz_session_results
# Removed: send_solution_if_available (solutions are now only sent on timeout by quiz_logic handlers)
from utils import pluralize_points

# –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ( –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π )
MOTIVATIONAL_MESSAGES = {
    -1000: "üíÄ –î–∞ —Ç—ã –±–ª–∏–Ω –∏–∑–¥–µ–≤–∞–µ—à—å—Å—è, —Ç–∞–∫–æ–µ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –≤–æ–æ–±—â–µ! –ü–æ–ø—Ä–æ–±—É–π –Ω–µ –≤—ã—Ç–≤–æ—Ä—è—Ç—å –±–æ–ª—å—à–µ!",
    -500: "üòµ –ù—É –∏ –Ω—É–±, –ø—Ä—è–º —Å –ø–æ—Ä–æ–≥–∞ –ø–∞–¥–∞–µ—Ç... –ü–æ–ø—Ä–∞–≤—å—Å—è —É–∂–µ!",
    -200: "ü§¶‚Äç‚ôÇÔ∏è –û–ø—è—Ç—å –ø—Ä–æ–º–∞—Ö? –ö–∞–∂–µ—Ç—Å—è, —Ç–µ–±–µ –ø–æ—Ä–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.",
    -50: "üôÉ –ù—É –Ω–∏—á–µ–≥–æ, –¥–∞–∂–µ —É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –±—ã–≤–∞—é—Ç –ø–ª–æ—Ö–∏–µ –¥–Ω–∏... –ø—Ä–∞–≤–¥–∞?",
    10: "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–µ—Ä–≤—ã–º–∏ 10 –æ—á–∫–∞–º–∏! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
    25: "üåü 25 –æ—á–∫–æ–≤! –¢—ã —É–∂–µ –æ–ø—ã—Ç–Ω—ã–π –∏–≥—Ä–æ–∫!",
    50: "üî• 50 –æ—á–∫–æ–≤! –¢—ã –ø—Ä–æ—Å—Ç–æ –æ–≥–æ–Ω—å! üî•",
    100: "üëë 100 –æ—á–∫–æ–≤! –ú–æ—è —Ç—ã –ª–∞–ø–æ—á–∫–∞, —É–º–Ω–µ–Ω—å–∫–æ—Å—Ç—å - —ç—Ç–æ –ø—Ä–æ —Ç–µ–±—è!",
    200: "üöÄ 200 –æ—á–∫–æ–≤! –¢—ã –≤–∑–ª–µ—Ç–∞–µ—à—å –∫ –≤–µ—Ä—à–∏–Ω–∞–º –∑–Ω–∞–Ω–∏–π!",
    300: "üíé 300 –æ—á–∫–æ–≤! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–ª–º–∞–∑ –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!",
    500: "üèÜ 500 –æ—á–∫–æ–≤! –ù–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!",
    750: "üåà 750 –æ—á–∫–æ–≤! –î–∞–ª –¥–∞–ª —É—à—ë–ª!",
    1000: "‚ú® 1000 –æ—á–∫–æ–≤! –¢—ã –ª–µ–≥–µ–Ω–¥–∞!",
    1500: "üî• 1500 –æ—á–∫–æ–≤! –û–≥–æ–Ω—å –Ω–µ–∏—Å—Ç–æ—â–∏–º–æ–π —ç–Ω–µ—Ä–≥–∏–∏!",
    2000: "üöÄ 2000 –æ—á–∫–æ–≤! –°–≤–µ—Ä—Ö–∑–≤–µ–∑–¥–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!",
    3000: "üëë 3000 –æ—á–∫–æ–≤! –¶–∞—Ä—å –∏ –±–æ–≥ –∑–Ω–∞–Ω–∏–π!",
    5000: "üí• 5000 –æ—á–∫–æ–≤! –≠-—ç-—ç—Ç–æ —Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤—Å–µ–ª–µ–Ω–Ω–æ–π?!",
}

async def handle_poll_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.poll_answer:
        logger.debug("handle_poll_answer: update.poll_answer is None, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ.")
        return

    poll_answer: PollAnswer = update.poll_answer
    user: TelegramUser = poll_answer.user
    answered_poll_id: str = poll_answer.poll_id
    user_id_str = str(user.id)
    user_full_name = user.full_name

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø—Ä–æ—Å–µ –∏–∑ state.current_poll
    # –í–∞–∂–Ω–æ: poll_info_from_state –∑–¥–µ—Å—å —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–±—ä–µ–∫—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ state.current_poll.
    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ poll_info_from_state (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞) –æ—Ç—Ä–∞–∑—è—Ç—Å—è –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ.
    poll_info_from_state = state.current_poll.get(answered_poll_id)

    if not poll_info_from_state:
        logger.debug(
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è poll_id {answered_poll_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ state.current_poll. "
            f"–û—Ç–≤–µ—Ç –æ—Ç {user_full_name} ({user_id_str}) –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω."
        )
        return

    chat_id_str = poll_info_from_state["chat_id"]
    # question_details = poll_info_from_state.get("question_details") # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ solution –∑–¥–µ—Å—å
    question_session_idx = poll_info_from_state.get("question_session_index", -1)

    # ... (–ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
    state.user_scores.setdefault(chat_id_str, {}).setdefault(user_id_str, {"name": user.full_name, "score": 0, "answered_polls": set(), "milestones_achieved": set()})
    global_user_data = state.user_scores[chat_id_str][user_id_str]
    global_user_data["name"] = user_full_name
    if not isinstance(global_user_data.get("answered_polls"), set):
        current_answered = global_user_data.get("answered_polls", [])
        global_user_data["answered_polls"] = set(current_answered)
    if not isinstance(global_user_data.get("milestones_achieved"), set):
        milestones = global_user_data.get("milestones_achieved", [])
        global_user_data["milestones_achieved"] = set(milestones)

    is_answer_correct = (len(poll_answer.option_ids) == 1 and poll_answer.option_ids[0] == poll_info_from_state["correct_index"])
    score_change_message = ""
    score_updated_this_time = False
    previous_score = global_user_data["score"]

    if answered_poll_id not in global_user_data["answered_polls"]:
        if is_answer_correct:
            global_user_data["score"] += 1
            score_change_message = "+1 –æ—á–∫–æ"
        else:
            global_user_data["score"] -= 1
            score_change_message = "-1 –æ—á–∫–æ"
        global_user_data["answered_polls"].add(answered_poll_id)
        save_user_data()
        score_updated_this_time = True
        logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_full_name} ({user_id_str}) –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ poll {answered_poll_id} "
            f"{'–ø—Ä–∞–≤–∏–ª—å–Ω–æ' if is_answer_correct else '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'} –≤ —á–∞—Ç–µ {chat_id_str}. "
            f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞: {score_change_message}. –û–±—â–∏–π —Å—á–µ—Ç: {global_user_data['score']}."
        )
        current_score = global_user_data["score"]
        sorted_thresholds = sorted(MOTIVATIONAL_MESSAGES.keys())
        for threshold in sorted_thresholds:
            message = MOTIVATIONAL_MESSAGES[threshold]
            if threshold in global_user_data["milestones_achieved"]:
                continue
            send_message_flag = False
            if threshold > 0:
                if previous_score < threshold <= current_score: send_message_flag = True
            elif threshold < 0:
                if previous_score > threshold >= current_score: send_message_flag = True
            if send_message_flag:
                try:
                    await context.bot.send_message(chat_id=chat_id_str, text=f"{user.first_name}, {message}")
                    global_user_data["milestones_achieved"].add(threshold)
                    save_user_data()
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {threshold} –æ—á–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id_str}: {e}")
    else:
        logger.debug(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_full_name} ({user_id_str}) —É–∂–µ –æ—Ç–≤–µ—á–∞–ª –Ω–∞ poll {answered_poll_id}. –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç –Ω–µ –∏–∑–º–µ–Ω–µ–Ω —ç—Ç–∏–º –æ—Ç–≤–µ—Ç–æ–º."
        )


    is_quiz_session_poll = poll_info_from_state.get("quiz_session", False)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –∫–≤–∏–∑–∞ (/quiz) - –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç.–∫. solution –∏ —Ç–∞–∫ –±—ã–ª –ø–æ —Ç–∞–π–º–∞—É—Ç—É
    if not is_quiz_session_poll and score_updated_this_time:
        try:
            reply_text_parts = []
            user_name_display = user.first_name
            if is_answer_correct:
                reply_text_parts.append(f"{user_name_display}, –≤–µ—Ä–Ω–æ! ‚úÖ")
            else:
                reply_text_parts.append(f"{user_name_display}, –Ω–µ–≤–µ—Ä–Ω–æ. ‚ùå")
            reply_text_parts.append(f"–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –≤ —ç—Ç–æ–º —á–∞—Ç–µ: {pluralize_points(global_user_data['score'])}.")
            await context.bot.send_message(chat_id=chat_id_str, text="\n".join(reply_text_parts))
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º/–ø–æ—è—Å–Ω–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id_str} –≤ —á–∞—Ç {chat_id_str} –ø–æ—Å–ª–µ /quiz: {e}", exc_info=True)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–µ—Å—Å–∏–π /quiz10
    if is_quiz_session_poll:
        session_chat_id = poll_info_from_state.get("associated_quiz_session_chat_id")
        if not session_chat_id:
            logger.error(f"Poll {answered_poll_id} –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ quiz_session, –Ω–æ associated_quiz_session_chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
            return

        active_session = state.current_quiz_session.get(session_chat_id)
        if active_session:
            # ... (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
            session_user_scores_data = active_session["session_scores"].setdefault(
                user_id_str,
                {"name": user_full_name, "score": 0, "answered_this_session_polls": set()}
            )
            session_user_scores_data["name"] = user_full_name
            if not isinstance(session_user_scores_data.get("answered_this_session_polls"), set):
                 session_user_scores_data["answered_this_session_polls"] = set(session_user_scores_data.get("answered_this_session_polls", []))
            if answered_poll_id not in session_user_scores_data["answered_this_session_polls"]:
                session_score_change_log = ""
                if is_answer_correct:
                    session_user_scores_data["score"] += 1
                    session_score_change_log = "+1"
                else:
                    session_user_scores_data["score"] -= 1
                    session_score_change_log = "-1"
                session_user_scores_data["answered_this_session_polls"].add(answered_poll_id)
                logger.info(
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_full_name} ({user_id_str}) –ø–æ–ª—É—á–∏–ª "
                    f"{session_score_change_log} –æ—á–∫–æ –≤ —Å–µ—Å—Å–∏–∏ {session_chat_id} "
                    f"–∑–∞ poll {answered_poll_id} (–≤–æ–ø—Ä–æ—Å {question_session_idx + 1}). –°–µ—Å—Å–∏–æ–Ω–Ω—ã–π —Å—á–µ—Ç: {session_user_scores_data['score']}."
                )

            # –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –õ–æ–≥–∏–∫–∞ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ / –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∏—à–µ–ª –Ω–∞ —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å —Å–µ—Å—Å–∏–∏
            if active_session.get("current_poll_id") == answered_poll_id:
                # –ï—Å–ª–∏ —ç—Ç–æ –ù–ï –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –∏ –ø–µ—Ä–µ—Ö–æ–¥ –µ—â–µ –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ –æ–ø—Ä–æ—Å–∞
                if not poll_info_from_state.get("is_last_question") and \
                   not poll_info_from_state.get("next_q_triggered_by_answer"): # –§–ª–∞–≥ –Ω–∞ poll_info –≤ state

                    # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω —ç—Ç–∏–º –æ—Ç–≤–µ—Ç–æ–º, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —ç—Ç–æ—Ç –∂–µ –æ–ø—Ä–æ—Å –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ
                    state.current_poll[answered_poll_id]["next_q_triggered_by_answer"] = True
                    logger.info(
                        f"–î–æ—Å—Ä–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ù–ï –ø–æ—Å–ª–µ–¥–Ω–∏–π poll {answered_poll_id} (–≤–æ–ø—Ä–æ—Å {question_session_idx + 1}) –≤ —Å–µ—Å—Å–∏–∏ {session_chat_id}. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å."
                    )
                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å. –û–Ω–æ –±—É–¥–µ—Ç –ø–æ —Ç–∞–π–º–∞—É—Ç—É.

                    # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π job –Ω–∞ —Ç–∞–π–º–∞—É—Ç –¢–ï–ö–£–©–ï–ì–û –≤–æ–ø—Ä–æ—Å–∞
                    if job := active_session.get("next_question_job"):
                        try: job.schedule_removal()
                        except Exception: pass
                        active_session["next_question_job"] = None

                    # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¢–ï–ö–£–©–ï–ú –æ–ø—Ä–æ—Å–µ –∏–∑ state.current_poll, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–æ—Å—Ä–æ—á–Ω–æ
                    state.current_poll.pop(answered_poll_id, None)
                    logger.debug(f"Poll {answered_poll_id} (–ù–ï –ø–æ—Å–ª–µ–¥–Ω–∏–π) —É–¥–∞–ª–µ–Ω –∏–∑ state.current_poll (–¥–æ—Å—Ä–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç).")

                    await send_next_question_in_session(context, session_chat_id)

                # –ï—Å–ª–∏ —ç—Ç–æ –ü–û–°–õ–ï–î–ù–ò–ô –≤–æ–ø—Ä–æ—Å –∏ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞) –µ—â–µ –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∞
                elif poll_info_from_state.get("is_last_question") and \
                     not poll_info_from_state.get("next_q_triggered_by_answer"):

                    # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω –∏ —Ñ–ª–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                    state.current_poll[answered_poll_id]["next_q_triggered_by_answer"] = True
                    logger.info(f"–î–æ—Å—Ä–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ü–û–°–õ–ï–î–ù–ò–ô poll {answered_poll_id} (–≤–æ–ø—Ä–æ—Å {question_session_idx + 1}) –≤ —Å–µ—Å—Å–∏–∏ {session_chat_id}.")

                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å.
                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–ï –æ—Ç–º–µ–Ω—è–µ–º job –Ω–∞ —Ç–∞–π–º–∞—É—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ (next_question_job).
                    #            –≠—Ç–æ—Ç job (handle_current_poll_end) —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.
                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–ï —É–¥–∞–ª—è–µ–º poll –∏–∑ state.current_poll –∑–¥–µ—Å—å. –ü—É—Å—Ç—å handle_current_poll_end –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç.
                    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–ï –≤—ã–∑—ã–≤–∞–µ–º show_quiz_session_results –∑–¥–µ—Å—å.

            else: # –û—Ç–≤–µ—Ç –ø—Ä–∏—à–µ–ª –Ω–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å —Å–µ—Å—Å–∏–∏
                logger.debug(
                    f"–û—Ç–≤–µ—Ç –Ω–∞ poll {answered_poll_id} –≤ —Å–µ—Å—Å–∏–∏ {session_chat_id} –ø–æ–ª—É—á–µ–Ω, "
                    f"–Ω–æ —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π poll —Å–µ—Å—Å–∏–∏ —É–∂–µ {active_session.get('current_poll_id')} "
                    "(–≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–≤–µ—Ç –∑–∞–ø–æ–∑–¥–∞–ª –∏–ª–∏ –Ω–∞ —Å—Ç–∞—Ä—ã–π poll). "
                    "–î–æ—Å—Ä–æ—á–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥/–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω—ã —ç—Ç–∏–º –æ—Ç–≤–µ—Ç–æ–º."
                )
        else: # active_session –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            logger.warning(
                f"–°–µ—Å—Å–∏—è –¥–ª—è —á–∞—Ç–∞ {session_chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ state.current_quiz_session, "
                f"—Ö–æ—Ç—è poll {answered_poll_id} —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ–µ. –û—Ç–≤–µ—Ç –æ—Ç {user_full_name} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞."
            )
